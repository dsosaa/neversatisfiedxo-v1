# VPS-optimized Docker Compose configuration
# Usage: docker compose -f docker-compose.vps.yml up -d --build

services:
  # VPS-optimized Next.js Frontend
  web:
    build:
      context: .
      dockerfile: Dockerfile.web-optimized
      target: development
    container_name: v0_trailer_web_vps
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Development optimizations
      - NODE_ENV=development
      - PORT=3000
      - HOSTNAME=0.0.0.0
      - NEXT_TELEMETRY_DISABLED=1
      - TURBOPACK=1
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      
      # Required environment variables
      - NEXT_PUBLIC_SITE_NAME=${NEXT_PUBLIC_SITE_NAME:-neversatisfiedxo}
      - NEXT_PUBLIC_CF_STREAM_CUSTOMER_CODE=${NEXT_PUBLIC_CF_STREAM_CUSTOMER_CODE}
      - GATE_PASSWORD=${GATE_PASSWORD}
      - MEDIACMS_BASE_URL=${MEDIACMS_BASE_URL:-http://mediacms:80}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
      
      # Optional environment variables
      - MEDIACMS_API_TOKEN=${MEDIACMS_API_TOKEN}
      - CF_ACCOUNT_ID=${CF_ACCOUNT_ID}
      - CF_STREAM_API_TOKEN=${CF_STREAM_API_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      
    volumes:
      # Bind mount for live code reloading
      - ./apps/web:/app/web:cached
      - ./data:/app/data:ro
      # Named volumes for better performance
      - web_node_modules:/app/web/node_modules
      - web_next_cache:/app/web/.next
      - web_turbo_cache:/app/web/.turbo
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mediacms:
        condition: service_healthy
    networks:
      - v0_trailer_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    # VPS-friendly resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M

  # VPS-optimized MediaCMS Backend
  mediacms:
    build:
      context: .
      dockerfile: Dockerfile.mediacms-ultra
      target: development
    platform: linux/amd64
    container_name: v0_trailer_mediacms_vps
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      # Database configuration
      - POSTGRES_USER=${POSTGRES_USER:-mediacms}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-mediacms}
      - POSTGRES_HOST=postgres
      
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      
      # Django settings optimized for VPS
      - SECRET_KEY=${DJANGO_SECRET_KEY:-django-insecure-vps-key}
      - ALLOWED_HOSTS=localhost,mediacms,web,${DOMAIN_NAME:-localhost}
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://web:3000
      - DEBUG=True
      
      # VPS-performance optimizations
      - CELERY_TASK_ALWAYS_EAGER=True
      - CELERY_TASK_EAGER_PROPAGATES=True
      - EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
      - LOGGING_LEVEL=ERROR  # Minimal logging
      - DJANGO_SETTINGS_MODULE=cms.settings
      - PYTHONUNBUFFERED=1
      - DEBIAN_FRONTEND=noninteractive
      - SKIP_DB_INIT=${SKIP_DB_INIT:-false}
      
    volumes:
      - mediacms_data:/home/mediacms.io/mediacms/media_files
      - mediacms_logs:/home/mediacms.io/mediacms/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - v0_trailer_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    # VPS-friendly resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M

  # VPS-optimized PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: v0_trailer_postgres_vps
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-mediacms}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-mediacms}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - v0_trailer_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mediacms} -d ${POSTGRES_DB:-mediacms}"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    # VPS-optimized PostgreSQL configuration
    command: >
      postgres
      -c shared_buffers=128MB
      -c effective_cache_size=512MB
      -c maintenance_work_mem=32MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=8MB
      -c default_statistics_target=50
      -c random_page_cost=1.1
      -c effective_io_concurrency=100
      -c max_connections=50
      -c shared_preload_libraries=''
      -c synchronous_commit=off
      -c fsync=off
      -c full_page_writes=off
    # VPS-friendly resource limits
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 512M
        reservations:
          cpus: '0.05'
          memory: 128M

  # VPS-optimized Redis
  redis:
    image: redis:7-alpine
    container_name: v0_trailer_redis_vps
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly no
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save ""
      --tcp-keepalive 60
      --timeout 0
    volumes:
      - redis_data:/data
    networks:
      - v0_trailer_network
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    # VPS-friendly resource limits
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.02'
          memory: 32M

# Optimized volumes
volumes:
  web_node_modules:
    driver: local
  web_next_cache:
    driver: local
  web_turbo_cache:
    driver: local
  mediacms_data:
    driver: local
  mediacms_logs:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Networks
networks:
  v0_trailer_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16
